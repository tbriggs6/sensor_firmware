diff --git a/arch/cpu/cc26x0-cc13x0/dev/spi-arch.c b/arch/cpu/cc26x0-cc13x0/dev/spi-arch.c
index 242cfa503..2bc929df2 100644
--- a/arch/cpu/cc26x0-cc13x0/dev/spi-arch.c
+++ b/arch/cpu/cc26x0-cc13x0/dev/spi-arch.c
@@ -115,7 +115,10 @@ spi_arch_lock_and_open(const spi_device_t *dev)
   board_spi_locks_spi[dev->spi_controller].owner = dev;
 
   /* CS pin configuration */
-  ti_lib_ioc_pin_type_gpio_output(dev->pin_spi_cs);
+  if (dev->spi_slave == 0)
+    ti_lib_ioc_pin_type_gpio_output(dev->pin_spi_cs);
+  else 
+    ti_lib_ioc_pin_type_gpio_input(dev->pin_spi_cs);
 
   /* First, make sure the SERIAL PD is on */
   ti_lib_prcm_power_domain_on(spi_controller[dev->spi_controller].power_domain);
@@ -130,15 +133,29 @@ spi_arch_lock_and_open(const spi_device_t *dev)
   /* SPI configuration */
   ti_lib_ssi_int_disable(spi_controller[dev->spi_controller].ssi_base, SSI_RXOR | SSI_RXFF | SSI_RXTO | SSI_TXFF);
   ti_lib_ssi_int_clear(spi_controller[dev->spi_controller].ssi_base, SSI_RXOR | SSI_RXTO);
-  
-  ti_lib_ssi_config_set_exp_clk(spi_controller[dev->spi_controller].ssi_base,
+ 
+  if (dev->spi_slave == 0) {  
+     ti_lib_ssi_config_set_exp_clk(spi_controller[dev->spi_controller].ssi_base,
                                 ti_lib_sys_ctrl_clock_get(),
                                 get_mode(dev), SSI_MODE_MASTER,
                                 dev->spi_bit_rate, 8);
-  ti_lib_ioc_pin_type_ssi_master(spi_controller[dev->spi_controller].ssi_base,
+  
+     ti_lib_ioc_pin_type_ssi_master(spi_controller[dev->spi_controller].ssi_base,
                                  dev->pin_spi_miso,
                                  dev->pin_spi_mosi, IOID_UNUSED,
                                  dev->pin_spi_sck);
+  } 
+  else {
+   ti_lib_ssi_config_set_exp_clk(spi_controller[dev->spi_controller].ssi_base, 
+                               ti_lib_sys_ctrl_clock_get(),
+                                get_mode(dev), SSI_MODE_SLAVE, 
+                               dev->spi_bit_rate, 8);
+   ti_lib_ioc_pin_type_ssi_slave(spi_controller[dev->spi_controller].ssi_base, 
+                               dev->pin_spi_mosi,
+                                dev->pin_spi_miso,
+                               dev->pin_spi_cs, 
+                               dev->pin_spi_sck);
+  }
 
   ti_lib_ssi_enable(spi_controller[dev->spi_controller].ssi_base);
 
diff --git a/os/dev/spi.h b/os/dev/spi.h
index 8eb2709e4..eae4410d5 100644
--- a/os/dev/spi.h
+++ b/os/dev/spi.h
@@ -112,6 +112,8 @@ typedef struct spi_device {
   uint8_t spi_pha;                  /* SPI mode phase */
   uint8_t spi_pol;                  /* SPI mode polarity */
   uint8_t spi_controller;           /* ID of SPI controller to use */
+// add slave indicator
+  uint8_t spi_slave;		    /* slave or master? */
 } spi_device_t;
 /** @} */
 /*---------------------------------------------------------------------------*/
